#!/bin/bash
#
# This script is run by Variety when a new wallpaper is set. You can use Bash, Python or whatever suits you best.
# Here you can put custom commands for setting the wallpaper on your specific desktop environment,
# or run commands like notify-send that notify you of the change. You can also add commands to theme your browser,
# login screen or whatever you desire.
#
# Occasionally new versions of this script are released to bring support for new desktops. To apply them, you
# should either delete this copy (in ~/.config/data/scripts/) and restart Variety, or merge in the changes yourself.
# Bug fixes are automatically applied by Variety provided the local copy is never changed.
#
# PARAMETERS:
# $1: The first passed parameter is the absolute path to the wallpaper image to be set as wallpaper
# (after effects, clock, etc. are applied).
#
# $2: The second passed parameter is "auto" when the wallpaper is changed automatically (i.e. regular change), "manual"
# when the user has triggered the change, or "refresh" when the change is triggered by a change in quotes, clock, etc.
#
# $3: The third passed parameter is the absolute path to the original wallpaper image (before effects, clock, etc.)
#
# $4: Fourth parameter comes from the display mode setting: "os" means that set_wallpaper should try to
# leave the OS setting unchanged. "zoom" means to try to fill the screen fully with the provided image.
# Other parameters that could be passed are the scaling modes used by GNOME:
# "centered", "scaled", "stretched", "zoom", "spanned", "wallpaper"
# TODO: Ideally all sections below for different DEs would take this setting into account
#
# EXAMPLE:
# echo "$1" # /home/username/.config/variety/wallpaper/wallpaper-clock-fac0eef772f9b03bd9c0f82a79d72506.jpg
# echo "$2" # auto
# echo "$3" # /home/username/Pictures/Wallpapers/Nature/green-tunnel-1920x1080-wallpaper-861.jpg


# Here you may apply some additional custom operations on the wallpaper before it is applied.
# In the end put the path to the actual final wallpaper image file in the WP variable.
# The default is to simply set WP=$1.
WP=$1


# Hyprland
# if [ "$DESKTOP_SESSION" == "hyprland" ]; then
#     hyprctl hyprpaper reload "$WP"
#     hyprctl hyprpaper wallpaper ", $WP"
#     magick "$3" -colorspace Gray $HOME/Pictures/background.png
# fi

# Is the swww-daemon running?
#SWWW=$(pidof swww-daemon)
if [ -n "$(pidof swww-daemon)" ]; then
    # swww img --transition-type=random "$WP"
    # swww may spike a cpu core when using fancy transition effects on some systems. Therefore we can check the cpu usage and choose to not change
    # wallpapers or use a less intensive transisiton type when doing so. This can be useful when the CPU is already under heavy load.
    cpuUsage=$(ps -A -o %cpu | awk '{s+=$1} END {print s}')
    cpuLimit=35.0

    if (( $(echo "$cpuUsage > $cpuLimit" | bc -l) )); then
        # option1 - High CPU usage.
        swww img --resize fit --transition-type=none "$WP"
    else
        #option2 - Low CPU usage.
        swww img --resize fit --transition-type=random "$WP"
    fi
else
    # See if SwayBG is running and nuke its last instance if it is.
    old_swaybg=$(pgrep -f swaybg)
    if [ -n "$old_swaybg" ]; then
        killall swaybg &
        swaybg -i "$WP" -m fit
    fi
fi
magick "$3" -colorspace Gray $HOME/Pictures/background.png



# =====================================================================================

exit 0
